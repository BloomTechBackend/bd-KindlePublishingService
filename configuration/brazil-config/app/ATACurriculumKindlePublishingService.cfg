*.*.java.HttpClientConfig = {

    # Sets the connection timeout. This is the maximum time that may be spent 
    # until a connection is established. It is NOT related to request processing 
    # timeout which is specified in BSF service ServiceConfig/ The connection 
    # will fail after this amount of time. 0 means timeout is not used.
    connectTimeout = 1000;

    # maxConnectRetries: maximum number of times to retry establishing 
    # connection. This results in a maximum of two total attempts: the initial
    # attempt, and one retry.
    maxConnectRetries = 1; 

    # Limit on number of all simultaneous outgoing HTTP connections
    # to all services. If there's no connection available, the request thread
    # will block until one becomes available. Requests to a VIP do not need to
    # be limited, so this value should be greater than the number of request- 
    # sending threads to  prevent request-sending threads from being blocked.
    maxTotalHttpConnections = 1000;

    # Limit on number of simultaneous outgoing HTTP connections
    # to a single host. If there's no connection available, the request thread
    # will block until one becomes available. Requests to a VIP do not need to
    # be limited, so this value should be greater than the number of request- 
    # sending threads to  prevent request-sending threads from being blocked.
    maxHttpConnectionsPerHost = 1000;

    # Enables connection pooling so connections are reused. Removes the latency
    # costs incurred by repeated TCP handshakes and generally reduces socket 
    # pressure due to the decrease in the number of sockets in TIME_WAIT.
    # The socket pressure issue is described in more detail here: 
    # https://w.amazon.com/index.php/SocketPressure
    closeAfterUse = false;

    # Disables stale-connection checking. Connections with VIPs are reliable and 
    # not frequently dropped, so this is generally safe. Currently, the default 
    # idle timeout for inbound client connections to a netscaler VIP is 180 
    # seconds, so idle client connections will be reaped by your system before 
    # the connection is closed by the load balancer (idle connection reaping has 
    # been set to 20 seconds in the build.xml using the 
    # timeout.close.idle.connections system property). One case where a
    # connection error may occur is when the load balancer flips / fails over.
    # More information on netscaler timeouts can be found here: 
    # https://w.amazon.com/index.php/Load_Balancers/NetscalerVipTimeout
    connectionStaleCheckingEnabled = false;
    
    # Reference the BSFJavaClient wiki page for information on the Jakarta
    # Commons HTTP client: https://w.amazon.com/index.php/DSE/BSFJavaClient

    # Maximum number of threads used for asynchronous processing
    # of HTTP requests when requestBufferCapacity is exceeded.
    maxReplyThreads = 100;
  };
