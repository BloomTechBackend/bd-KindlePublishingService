@startuml

title ATAKindlePublishingService

class GetBookActivity {
  - recommendationsServiceClient : RecommendationsServiceClient
  - catalogDao : CatalogDao
  + execute(GetBookRequest) : GetBookResponse
}

class SubmitBookForPublishingActivity {
  - publishingStatusDao : PublishingStatusDao
  + execute(SubmitBookForPublishingRequest) : SubmitBookForPublishingResponse
}

class RemoveBookFromCatalogActivity {
  + execute(RemoveBookFromCatalogRequest) : RemoveBookFromCatalogResponse
}

class RecommendationsServiceClient {
  - recommendationsService : RecommendationsService
  - metricsPublisher : MetricsPublisher
  + getBookRecommendations(BookGenre) : List<BookRecommendation>
}

class MetricsPublisher {
  + addCount(String, double, Unit<?>)
  + addTime(String, double, Unit<?>)
}

class CatalogItemVersion {
  - @DynamoDBHashKey bookId : String
  - @DynamoDBRangeKey version : int
  - inactive : boolean
  - title : String
  - author : String
  - text : String
  - genre : BookGenre
}

class PublishingStatusItem {
  - @DynamoDBHashKey publishingRecordId : String
  - @DynamoDBRangeKey status : PublishingRecordStatus
  - statusMessage : String
  - bookId : String
}

class CatalogDao {
  - dynamoDBMapper : DynamoDBMapper
  + getBookFromCatalog(String) : CatalogItemVersion
}

class PublishingStatusDao {
  - dynamoDBMapper : DynamoDBMapper
  + setPublishingStatus(String, PublishingRecordStatus, String) : PublishingStatusItem
  + setPublishingStatus(String, PublishingRecordStatus, String, String) : PublishingStatusItem
}

class BookNotFoundException {
  - serialVersionUuid : long
  + BookNotFoundException(String)
  + BookNotFoundException(String, Throwable)
}

class PublishingStatusNotFoundException {
  - serialVersionUuid : long
  + PublishingStatusNotFoundException(String)
  + PublishingStatusNotFoundException(String, Throwable)
}

CatalogDao --o GetBookActivity
RecommendationsServiceClient --o GetBookActivity
PublishingStatusDao --o SubmitBookForPublishingActivity
MetricsPublisher --o RecommendationsServiceClient

CatalogItemVersion .. CatalogDao
PublishingStatusItem .. PublishingStatusDao
CatalogDao .. BookNotFoundException

@enduml

