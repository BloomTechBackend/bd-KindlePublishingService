@startuml
title GetBook

actor Client
participant "Load Balancer/ECS" as ecs
participant GetBookActivity
participant CatalogDao
participant RecommendationDAO
participant RecommendationsServiceClient
database DynamoDB

Client -> ecs : HTTP request
ecs -> GetBookActivity : execute(GetBookRequest)
GetBookActivity -> CatalogDao : getBookFromCatalog(bookId)
CatalogDao -> DynamoDB : query for latest version of book
alt if bookId does not exist or book is not active
    CatalogDao --> GetBookActivity : throw BookNotFoundException
    GetBookActivity --> ecs : transform to KindlePublishingClientException
    ecs --> Client : 400 Response
else else continue
end
DynamoDB -> CatalogDao : book data
CatalogDao -> GetBookActivity : return CatalogItemVersion
GetBookActivity -> RecommendationDAO: getBookRecommendations(BookGenre)
alt if BookGenre not in cache
  RecommendationDAO -> RecommendationsServiceClient: getBookRecommendations(BookGenre)
  RecommendationsServiceClient -> RecommendationDAO : return List<BookRecommendation>
end
RecommendationDAO -> GetBookActivity : return List<BookRecommendation>
GetBookActivity -> GetBookActivity : convert CatalogItemVersion to Coral Model Book
GetBookActivity -> GetBookActivity : convert BookRecommendations to Coral Model BookRecommendations
GetBookActivity -> GetBookActivity : create GetBookResponse
GetBookActivity -> GetBookActivity : set book and recommendations
GetBookActivity -> ecs : return GetBookResponse
ecs -> Client : 200 response w/ data
@enduml
